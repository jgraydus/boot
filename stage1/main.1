(eval (parse (read-file "prelude.1")))

(print "MAIN")

(define repl (fn ()
   (define read (fn () (parse (read-line))))
   (loop (print (eval (read))))))

(repl)

;(nth 4 (list 1 2 3 4 5 6 7 8))

;(print (unzip (list (list 1 2) (list 3 4) (list 5 6) (list 7 8))))

;(define x 8475345)

;(let ((x 42) (y 6)) (+ x y))

;(define foo (fn () (print "foo") #t))
;(define bar (fn () (print "bar") #f))

;(or (foo) (bar))

;(unzip 
;  (zip 
;     (list 1 2 3 4) 
;     (list 5 6 7 8))
;)

;(concat (list 1 2 3) (list 5 6 7))

;(let ((xs (list 1 2 3)) 
;       (x (head xs)))
; x)

;(substring "blahblah" 0 4)

